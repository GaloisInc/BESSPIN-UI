version: '3'

services:

  client:
    networks:
      - proxy-layer
      - internal-service-layer
    depends_on:
      - server
    stdin_open: true
    command: npm run start:debug
    build: # this is only for development, we should use when we are ready for production
      context: .
      dockerfile: client/Dockerfile
    volumes: # this is only for development mode to allow changes to the src to be picked up in the container without a restart
      - './client:/besspin-ui/client'
      - /besspin-ui/client/node_modules # NOTE: this means that if you install a node module locally, you will have to rebuild your image
    ports:
      - '3000:3000'
      - '9229:9229' # this is only for development mode when the debugger is running
    environment:
      NODE_ENV: development
      HOST: 0.0.0.0
      PORT: 3000

  server:
    user: besspinuser
    # to build the image, edit a /script/production.env
    # ./script/publish-docker-images.sh
    # In order to override the BESSPIN_UI_VERSION from the .env file you have to
    # export the variable in the terminal, for example `export BESSPIN_UI_VERSION=latest`
    image: "artifactory.galois.com:5008/besspin-ui:${BESSPIN_UI_VERSION}"
    restart: always
    networks:
      - proxy-layer
      - internal-service-layer
    ports:
      - '3784:3784'
      - '5000:5000'
    volumes: # this is also only for development
      - '~/.local/share/besspin:/home/besspinuser/.local/share/besspin'
      - './server:/besspin-ui/server'
      - './scripts/:/besspin-ui/scripts'
    environment:
      DB_PATH: /besspin-ui/server # NOTE: if we use this docker-compose set up in production, we will need to remove this variable
      XDG_BASE_DATA: /home/besspinuser/.local/share
      LC_ALL: C.UTF-8
      LANG: C.UTF-8
      BESSPIN_CLAFER: /home/besspinuser/.local/bin/clafer
      HOST: 0.0.0.0
      PORT: 3784
      USE_TOOLSUITE: "True"
      USE_TOOLSUITE_CONFIGURATOR: "True"

networks:
  proxy-layer:
  internal-service-layer:
