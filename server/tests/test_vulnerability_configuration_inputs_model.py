from helpers import (
    BesspinTestBaseClass,
    create_featureModel,
    create_vulnerabilityConfig
)
from uuid import uuid4

from app.models import VulnerabilityConfigurationInput


class VulnerabilityConfigurationInputModelTestCase(BesspinTestBaseClass):

    def setUp(self):
        super(VulnerabilityConfigurationInputModelTestCase, self).setUp()
        self.test_vulnClass = [*(self.app.config['VALID_VULN_CLASSES'])][0]

    def test_minimum_viable_record(self):
        test_uid = str(uuid4())
        feature_model = create_featureModel(uid=test_uid)

        create_vulnerabilityConfig(
            label='test vuln config',
            vulnClass=self.test_vulnClass,
            featureModelUid=feature_model.uid,
            workflowId=1,
        )

        self.assertEqual(len(VulnerabilityConfigurationInput.query.all()), 1)

        vuln_config_input = VulnerabilityConfigurationInput.query.filter_by(featureModelUid=test_uid).first()

        self.assertIsNotNone(vuln_config_input)
        self.assertEqual(vuln_config_input.featureModel.uid, test_uid)
